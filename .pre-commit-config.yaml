
# Pre-commit hooks for code quality
# Installation: pip install pre-commit && pre-commit install
# Usage: pre-commit run --all-files

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending

  # Python: Ruff (linter + formatter)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.13
    hooks:
      # Linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        files: ^api/
      # Formatter
      - id: ruff-format
        files: ^api/

  # Python: Black (formatter)
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        files: ^api/
        language_version: python3.11

  # Python: MyPy (type checking)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: ^api/
        additional_dependencies:
          - types-all
          - pydantic
        args: [--config-file=api/pyproject.toml]

  # Python: isort (import sorting)
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: ^api/
        args: [--profile=black]

  # TypeScript/JavaScript: Prettier
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: ^web/
        types_or: [javascript, jsx, ts, tsx, json, yaml, markdown]

  # TypeScript/JavaScript: ESLint
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: ^web/.*\.[jt]sx?$
        types: [file]
        additional_dependencies:
          - eslint@8.56.0
          - eslint-config-next@14.1.0
          - '@typescript-eslint/parser@7.0.0'
          - '@typescript-eslint/eslint-plugin@7.0.0'
        args: [--fix, --max-warnings=0]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Secret detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  # Commit message linting (if using conventional commits)
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--force-scope]
